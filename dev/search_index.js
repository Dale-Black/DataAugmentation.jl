var documenterSearchIndex = {"docs":
[{"location":"#","page":"Home","title":"Home","text":"CurrentModule = DataAugmentation","category":"page"},{"location":"#DataAugmentation-1","page":"Home","title":"DataAugmentation","text":"","category":"section"},{"location":"#","page":"Home","title":"Home","text":"","category":"page"},{"location":"#","page":"Home","title":"Home","text":"Modules = [DataAugmentation]","category":"page"},{"location":"#DataAugmentation.AbstractAffineTransform","page":"Home","title":"DataAugmentation.AbstractAffineTransform","text":"AbstractAffineTransform\n\nAbstract supertype for affine transformations\n\nSupporting custom AbstractAffineTransforms and Items\n\nAbstractAffineTransform interface\n\ngettfmmatrix(t::MyAffineTransform, getbounds(item), getparam(t)) should return a transformation matrix (s. CoordinateTransformations.jl)\n\nItem interface\n\ngetbounds(item::MyItem)::Tuple returns the spatial bounds of an item, e.g. size(img) for an image array\napplytfm(item::MyItem, tfm)::MyItem applies transformation matrix tfm (constructed with gettfmmatrix) to item and returns an item of the same type\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.AbstractTransform","page":"Home","title":"DataAugmentation.AbstractTransform","text":"AbstractTransform\n\nAbstract type for all transforms\n\nAbstractTransform interface\n\nTODO: Document\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.AffineTransform","page":"Home","title":"DataAugmentation.AffineTransform","text":"AffineTransform\n\nApplies static transformation matrix tfm to an item\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.CroppedAffineTransform","page":"Home","title":"DataAugmentation.CroppedAffineTransform","text":"CroppedAffineTransform(transform, croptransform)\n\nApplies an affine transform and crops with croptransform, such that getbounds(t(item)) == getcrop(croptransform)\n\nThis wrapper leads to performance improvements when warping an image, since only the indices within the bounds of crop need to be evaluated.\n\nComposing any AbstractAffineTransform with a CropTransform constructs a CroppedAffineTransform.\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.FlipX","page":"Home","title":"DataAugmentation.FlipX","text":"FlipX\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.FlipY","page":"Home","title":"DataAugmentation.FlipY","text":"FlipY\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.Image","page":"Home","title":"DataAugmentation.Image","text":"Image\n\nItem for an Image\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.Item","page":"Home","title":"DataAugmentation.Item","text":"`Item`\n\nAbstract data container\n\nTODO: document Item interface\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.ItemWrapper","page":"Home","title":"DataAugmentation.ItemWrapper","text":"`ItemWrapper`\n\nAbstract type for wrapper items\n\nTODO: document ItemWrapper interface\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.Keypoints","page":"Home","title":"DataAugmentation.Keypoints","text":"Keypoints\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.Label","page":"Home","title":"DataAugmentation.Label","text":"Label\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.Pipeline","page":"Home","title":"DataAugmentation.Pipeline","text":"Pipeline\n\nA Pipeline combines several transformations and applies them sequentially\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.Rotate","page":"Home","title":"DataAugmentation.Rotate","text":"RotateTransform(angle)\nRotateTransform(angles)\n\nRotates an Item by angle degrees counter-clockwise using an affine transformation. If a vector or range angles of degrees is given, picks a random element.\n\nSee also Rotate90, Rotate180, Rotate270\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.Tensor","page":"Home","title":"DataAugmentation.Tensor","text":"Tensor\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.Scale-Tuple{Tuple}","page":"Home","title":"DataAugmentation.Scale","text":"Scale\n\n\n\n\n\n","category":"method"},{"location":"#DataAugmentation.itemdata-Tuple{Item}","page":"Home","title":"DataAugmentation.itemdata","text":"itemdata(item::Item)\n\nTODO: document\n\n\n\n\n\n","category":"method"},{"location":"#DataAugmentation.AbstractResizedTransform","page":"Home","title":"DataAugmentation.AbstractResizedTransform","text":"\n\n\n\n","category":"type"},{"location":"#DataAugmentation.ComposedAffineTransform","page":"Home","title":"DataAugmentation.ComposedAffineTransform","text":"ComposedAffineTransform(transforms)\n\nComposes several affine transformations.\n\nDue to associativity of affine transformations, the transforms can be combined before applying, leading to large performance improvements.\n\nChaining (|>) multiple AbstractAffineTransformations automatically creates a ComposedAffineTransform.\n\n\n\n\n\n","category":"type"},{"location":"#DataAugmentation.applytfm-Union{Tuple{C}, Tuple{Image{C},Any}, Tuple{Image{C},Any,Union{Nothing, Tuple}}} where C","page":"Home","title":"DataAugmentation.applytfm","text":"applytfm(item, tfm, crop = nothing)\n\nApplies affine transformation matrix tfm to item, optionally cropping to window of size crop\n\n\n\n\n\n","category":"method"},{"location":"#DataAugmentation.applytfmkeypoint-Tuple{Tuple,Any}","page":"Home","title":"DataAugmentation.applytfmkeypoint","text":"applytfmkeypoint(k, tfm)\n\nApplies affine transformation matrix tfm to a single keypoint k\n\n\n\n\n\n","category":"method"},{"location":"#DataAugmentation.pickfromrange-Tuple{AbstractRange,AbstractFloat}","page":"Home","title":"DataAugmentation.pickfromrange","text":"pickfromrange(rng::AbstractRange, rnd::AbstractFloat)\n\nGiven a number 0 <= rnd <= 1 that's generated by rand(), pick the element in range rng that is closest to it relative to rng's length\n\n\n\n\n\n","category":"method"}]
}
